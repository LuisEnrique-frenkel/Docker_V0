version: '3.6'

services:
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    restart: always
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN}
      - INFLUXD_SESSION_LENGTH=${INFLUXD_SESSION_LENGTH}
      - INFLUXD_TLS_CERT=/certs/server.crt
      - INFLUXD_TLS_KEY=/certs/server.key
      - TZ=America/Mexico_City
    ports:
      - '8086:8086'
    volumes:
      - ./influxdb/var/lib/influxdb2:/var/lib/influxdb2
      - ./influxdb/etc/influxdb2:/etc/influxdb2
      - ./certs:/certs

telegraf:
    image: telegraf
    container_name: telegraf
    restart: always
    volumes:
    - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    - ./certs:/etc/telegraf/certs
    # - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - influxdb
    links:
      - influxdb
    ports:
    - '8125:8125'

  grafana:
    image: grafana/grafana-oss:10.3.0-ubuntu
    container_name: grafana
    restart: always
    depends_on:
      - influxdb
    environment:
      # - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      # - GF_INSTALL_PLUGINS=${GRAFANA_INSTALL_PLUGINS}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      # - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_PROTOCOL=https
      - GF_SERVER_CERT_FILE=/certs/server.crt
      - GF_SERVER_CERT_KEY=/certs/server.key
      - TZ=America/Mexico_City
    links:
      - influxdb
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/var/lib/grafana:/var/lib/grafana
      - ./certs:/certs
    command:
      - "sh"
      - "\"-c\""
      - "grafana-cli admin reset-admin-password ${GRAFANA_ADMIN_PASSWORD} && /run.sh"

  nodered:
    build:
      context: ./nodered
      dockerfile: Dockerfile
    container_name: nodered
    restart: always
    depends_on:
      - influxdb
    environment: 
      - NODE_RED_USERNAME=${NODE_RED_USERNAME}
      - NODE_RED_PASSWORD=${NODE_RED_PASSWORD}
      - NODE_RED_CREDENTIAL_SECRET=${NODE_RED_CREDENTIAL_SECRET}
      - TZ=America/Mexico_City
    ports:
      - '1880:1880'
    volumes:
      - ./nodered/data:/data
      - ./certs:/certs

  mqtt:
    restart: always
    container_name: mqtt
    build:
      context: ./mqtt
      dockerfile: Dockerfile
    volumes:
      - ./mqtt/config:/mosquitto/config
      - ./mqtt/data:/mosquitto/data
      - ./mqtt/log:/mosquitto/log
      - ./certs:/mosquitto/certs
    environment:
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - TZ=America/Mexico_City
    ports:
      - 8883:8883
